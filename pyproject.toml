[project]
name = "nbis_project_admin"
authors = [
    {name = "Per Unneberg", email = "per.unneberg@scilifelab.se"},
]
description = "NBIS project admin"
readme = "README.md"
keywords = ["bioinformatics"]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Bio-Informatics"
]
dependencies = [
    'click>=8.0',
    "pypandoc>=1.15",
    "jinja2>=3.1.6",
    "toml>=0.10.2",
    "ruamel-yaml>=0.18.10",
    "jsonschema>=4.23.0",
]
dynamic = ["version"]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.hooks.vcs]
version-file = "src/nbis/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["src/nbis"]

[project.scripts]
nbis-admin = "nbis.cli:cli"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --doctest-modules"
pythonpath = [
    "src"
]
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.pyright]
venvPath = "."          # uv installs the venv in the current dir
venv = ".venv"          #       in a folder called `.venv`
include = ["src"]
pythonVersion = "3.11"  # if library, specify the _lowest_ you support
reportMissingTypeStubs = false
reportAttributeAccessIssue = false
reportCallIssue = false
reportOptionalMemberAccess = false
reportAssignmentType = false



[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py311,py312,py313
isolated_build = true

[gh-actions]
python =
    3.11: py311
    3.12: py312
    3.13: py313

[testenv:test]
changedir = tests
deps =
    pytest
    pytest-coverage
    pytest-shutil
    pytest-git
    pytest-runner
    pip>=22.1.0
    wheel
commands =
    pytest --basetemp="{envtmpdir}" {posargs}

[testenv:project]
allowlist_externals =
    git
    touch
    uv
changedir = {envtmpdir}/project_foo
setenv =
    SKIP = lint
deps =
    build
    pre-commit
    pyright
    pytest
    pytest-coverage
    pytest-shutil
    pytest-git
    pytest-runner
    pip>=22.1.0
    wheel
commands:
    nbis-admin init .
    git init -b main .
    git add -f .
    uv pip install -e . --no-deps
    uv pip install snakemake pandas
    project_foo
    nbis-admin config init
    nbis-admin add template -t quarto
    nbis-admin add tool my_tool
    touch src/project_foo/tools/__init__.py
    nbis-admin smk init
    nbis-admin smk add
    git add . _quarto.yml src/project_foo/tools/my_tool.py
    project_foo
    project_foo smk
    project_foo smk run --no-profile --cores 1
    nbis-admin --version
    nbis-admin add diary
    pre-commit
"""

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.format]
docstring-code-format=true

[tool.ruff.lint]
select = [
  "A",    # warn about shadowing built-ins
  "E",    # style stuff, whitespaces
  "F",    # important pyflakes lints
  "I",    # import sorting
  "N",    # naming
  "T100", # breakpoints
]
ignore = ["N806"]

[tool.ruff.lint.isort]
# so it knows to group first-party stuff last
known-first-party = ["nbis"]

[dependency-groups]
dev = [
    "jupyter>=1.1.1",
    "jupyter-book>=1.0.4.post1",
    "pylint>=3.3.6",
    "pyright>=1.1.398",
    "pytest>=8.3.5",
    "snakemake>=9.1.9",
    "tox>=4.25.0",
]
